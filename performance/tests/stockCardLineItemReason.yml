execution:
  - concurrency: 10
    iterations: 10
    ramp-up: 1m
    hold-for: 10m
    scenario: create-reason
  - concurrency: 10
    iterations: 10
    ramp-up: 1m
    hold-for: 10m
    scenario: update-reason
  - concurrency: 10
    iterations: 10
    ramp-up: 1m
    hold-for: 10m
    scenario: get-reason
  - concurrency: 10
    iterations: 10
    ramp-up: 1m
    hold-for: 10m
    scenario: get-reasons

scenarios:
  create-reason:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/stockCardLineItemReasons
        method: POST
        label: CreateReason
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonOutput;

            def random = new Random();

            def reason = new LinkedHashMap([
              name: "performance-reason-" + random.nextInt(),
              description: "this is a performance reason",
              reasonType: "CREDIT",
              reasonCategory: "TRANSFER",
              isFreeTextAllowed: true
            ]);
            vars.put("reason", JsonOutput.toJson(reason));
        body: ${reason}
        extract-jsonpath:
          reason_id: $.id
  get-reason:
    requests:
      - include-scenario: create-reason
      - url: ${__P(base-uri)}/api/stockCardLineItemReasons/${reason_id}
        method: GET
        label: GetReason
        headers:
          Authorization: Bearer ${access_token}
  get-reasons:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/stockCardLineItemReasons
        method: GET
        label: GetReasons
        headers:
          Authorization: Bearer ${access_token}
  update-reason:
    requests:
      - include-scenario: create-reason
      - url: ${__P(base-uri)}/api/stockCardLineItemReasons/${reason_id}
        method: PUT
        label: UpdateReason
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonSlurper;
            import groovy.json.JsonOutput;

            def response = prev.getResponseDataAsString();
            def jsonSlurper = new JsonSlurper();
            def reason = jsonSlurper.parseText(response);

            reason.isFreeTextAllowed = false;

            vars.put("reason", JsonOutput.toJson(reason));
        body: ${reason}

reporting:
  - module: passfail
    criteria:
      - 'CreateReason too high error rate: failures>1%, continue as failed, label=CreateReason, title="CreateReason error rate too high"'
      - 'CreateReason is too slow: p90>2000ms, stop as failed, label=CreateReason, title="CreateReason response time too high"'
      - 'CreateReason needs improvement: p90>1500ms and p90<=2000ms, continue as passed, label=CreateReason, title="CreateReason needs improvement"'
      - 'GetReason too high error rate: failures>1%, continue as failed, label=GetReason, title="GetReason error rate too high"'
      - 'GetReason is too slow: p90>2500ms, stop as failed, label=GetReason, title="GetReason response time too high"'
      - 'GetReason needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetReason, title="GetReason needs improvement"'
      - 'GetReasons too high error rate: failures>1%, continue as failed, label=GetReasons, title="GetReasons error rate too high"'
      - 'GetReasons is too slow: p90>2500ms, stop as failed, label=GetReasons, title="GetReasons response time too high"'
      - 'GetReasons needs improvement: p90>1500ms and p90<=2500ms, continue as passed, label=GetReasons, title="GetReasons needs improvement"'
      - 'UpdateReason too high error rate: failures>1%, continue as failed, label=UpdateReason, title="UpdateReason error rate too high"'
      - 'UpdateReason is too slow: p90>4000ms, stop as failed, label=UpdateReason, title="UpdateReason response time too high"'
      - 'UpdateReason needs improvement: p90>2500ms and p90<=4000ms, continue as passed, label=UpdateReason, title="UpdateReason needs improvement"'
